# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  
  push:
    branches: [ "main" ]
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7' 
      
      - name: Install dependencies
        working-directory: ./Pipeline/Intrusion/Production
        run: pip install -r main_requirements.txt

      - name: Check condition
        working-directory: ./Pipeline/Intrusion/Production
        run: python check_condition.py

      - name: Run read
        working-directory: ./Pipeline/Intrusion/Production
        run: python read_file.py

      
      - name: Run train
        working-directory: ./Pipeline/Intrusion/Production 
        run: python train_op.py

      - name: Run eval
        working-directory: ./Pipeline/Intrusion/Production 
        run: python model_eval_deploy.py

      - name: Install dependencies
        working-directory: ./Pipeline/Intrusion/Production
        run: pip install -r compile_requirements.txt


      - name: Install dependencies
        run: |
          pip install kfp requests beautifulsoup4
  
      - name: Run Kubeflow Pipeline
        env:
          
          KUBEFLOW_TOKEN: ${{ secrets.KUBEFLOW_TOKEN }}
        run: |
          import kfp
          from kfp_server_api.exceptions import ApiException
  
          # Constants
          KUBEFLOW_HOST = 'http://acc85673e1f094914a006f330bb51cb8-353421018.us-east-1.elb.amazonaws.com'
          TOKEN = "${{ secrets.KUBEFLOW_TOKEN }}"
          NAMESPACE = 'kubeflow-user-example-com'
  
          # Initialize the client
          client = kfp.Client(host=KUBEFLOW_HOST, existing_token=TOKEN, namespace=NAMESPACE)
  
          experiment_name = 'Test Experiment'
  
          try:
              experiment = client.create_experiment(name=experiment_name)
              print(f'Experiment {experiment_name} created with ID: {experiment.id}')
          except ApiException as e:
              print(f"Exception when creating experiment: {e}")
              print(f"Status: {e.status}")
              print(f"Reason: {e.reason}")
              print(f"Headers: {e.headers}")
              print(f"Body: {e.body}")
  
          # List experiments to verify creation
          print(client.list_experiments())

      - name: Upload output.yaml I can remove this 
        uses: actions/upload-artifact@v2
        with:
          name: generate output
          path: /home/runner/work/internproject/internproject/Pipeline/Intrusion/Production/intrusion_pipeline.yaml
      
